//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.42000
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProductsClient.ProductsService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductData", Namespace="http://schemas.datacontract.org/2004/07/Products")]
    [System.SerializableAttribute()]
    public partial class ProductData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProductsService.IProductsService")]
    public interface IProductsService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsService/ListProducts", ReplyAction="http://tempuri.org/IProductsService/ListProductsResponse")]
        ProductsClient.ProductsService.ProductData[] ListProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsService/ListProducts", ReplyAction="http://tempuri.org/IProductsService/ListProductsResponse")]
        System.Threading.Tasks.Task<ProductsClient.ProductsService.ProductData[]> ListProductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsService/GetProduct", ReplyAction="http://tempuri.org/IProductsService/GetProductResponse")]
        ProductsClient.ProductsService.ProductData GetProduct(string productCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsService/GetProduct", ReplyAction="http://tempuri.org/IProductsService/GetProductResponse")]
        System.Threading.Tasks.Task<ProductsClient.ProductsService.ProductData> GetProductAsync(string productCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsService/CurrentStock", ReplyAction="http://tempuri.org/IProductsService/CurrentStockResponse")]
        int CurrentStock(string productCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsService/CurrentStock", ReplyAction="http://tempuri.org/IProductsService/CurrentStockResponse")]
        System.Threading.Tasks.Task<int> CurrentStockAsync(string productCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsService/AddStock", ReplyAction="http://tempuri.org/IProductsService/AddStockResponse")]
        bool AddStock(string productCode, decimal quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsService/AddStock", ReplyAction="http://tempuri.org/IProductsService/AddStockResponse")]
        System.Threading.Tasks.Task<bool> AddStockAsync(string productCode, decimal quantity);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProductsServiceChannel : ProductsClient.ProductsService.IProductsService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProductsServiceClient : System.ServiceModel.ClientBase<ProductsClient.ProductsService.IProductsService>, ProductsClient.ProductsService.IProductsService {
        
        public ProductsServiceClient() {
        }
        
        public ProductsServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProductsServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductsServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductsServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ProductsClient.ProductsService.ProductData[] ListProducts() {
            return base.Channel.ListProducts();
        }
        
        public System.Threading.Tasks.Task<ProductsClient.ProductsService.ProductData[]> ListProductsAsync() {
            return base.Channel.ListProductsAsync();
        }
        
        public ProductsClient.ProductsService.ProductData GetProduct(string productCode) {
            return base.Channel.GetProduct(productCode);
        }
        
        public System.Threading.Tasks.Task<ProductsClient.ProductsService.ProductData> GetProductAsync(string productCode) {
            return base.Channel.GetProductAsync(productCode);
        }
        
        public int CurrentStock(string productCode) {
            return base.Channel.CurrentStock(productCode);
        }
        
        public System.Threading.Tasks.Task<int> CurrentStockAsync(string productCode) {
            return base.Channel.CurrentStockAsync(productCode);
        }
        
        public bool AddStock(string productCode, decimal quantity) {
            return base.Channel.AddStock(productCode, quantity);
        }
        
        public System.Threading.Tasks.Task<bool> AddStockAsync(string productCode, decimal quantity) {
            return base.Channel.AddStockAsync(productCode, quantity);
        }
    }
}
